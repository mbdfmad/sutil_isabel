library(haven)
library(nycflights13)
library(GGally)
gg(diamonds)
ggpairs(diamonds)
ggplot(diamonds, aes(x = cut, y = carat)) +
geom_boxplot()
#Para ver la relacion entre variables
ggpairs(diamonds)
#Para predecir el precio vamos a usar carat por que es la que tiene mas correlacion (0.922).
#Podemos ver que tiene muy poca relacion con table y depth. Las otras variables con las que se correlacion son x, y, z (involucradas en el peso)
ggplot(diamonds, aes(x = cut, y = carat)) +
geom_boxplot()
#'Menor calidad' implica que es mas cara ya que cuanto mejor es el corte del diamante menos quilates tiene.
#Limpiamos los datos
who1 <- who %>%
pivot_longer(
cols = new_sp_m014:newrel_f65,
names_to = "key",
values_to = "cases",
values_drop_na = TRUE
)
who2 <- who1 %>%
mutate(names_from = stringr::str_replace(key, "newrel", "new_rel"))
who3 <- who2 %>%
separate(key, c("new", "type", "sexage"), sep = "_")
who4 <- who3 %>%
select(-new, -iso2, -iso3)
who5 <- who4 %>%
separate(sexage, c("sex", "age"), sep = 1)
(who5)
(who5%>%
select(country, year, sex, cases))
who5 %>%
group_by(country, year, sex) %>%
filter(year > 1995) %>%
summarise(cases = sum(cases)) %>%
unite(country_sex, country, sex, remove = FALSE) %>%
ggplot(aes(x = year, y = cases, group = country_sex, colour = sex)) +
geom_line()
(who5%>%
select(country, year, sex, cases))
who5 %>%
group_by(country, year, sex) %>%
filter(year > 1995) %>%
summarise(cases = sum(cases)) %>%
unite(country_sex, country, sex, remove = FALSE) %>%
ggplot(aes(x = year, y = cases, group = country_sex, colour = sex)) +
geom_line()
(who5%>%
select(country, year, sex, cases))
(who5%>%
select(country, year, sex, cases))
who5 %>%
group_by(country, year, sex) %>%
filter(year > 1995) %>%
summarise(cases = sum(cases)) %>%
unite(country_sex, country, sex, remove = FALSE) %>%
ggplot(aes(x = year, y = cases, group = country_sex, colour = sex)) +
geom_line()
(who5%>%
select(country, year, sex, sum(cases)))
(who5%>%
select(country, year, sex, cases))
who5 %>%
group_by(country, year, sex) %>%
filter(year > 1995) %>%
summarise(cases = sum(cases)) %>%
unite(country_sex, country, sex, remove = FALSE) %>%
ggplot(aes(x = year, y = cases, group = country_sex, colour = sex)) +
geom_line()
(who5%>%
select(country, year, sex, cases) %>%
filter(year > 1995) %>%
summarise(cases = sum(cases))
)
(who5%>%
select(country, year, sex, cases))
who5 %>%
group_by(country, year, sex) %>%
filter(year > 1995) %>%
summarise(cases = sum(cases)) %>%
unite(country_sex, country, sex, remove = FALSE) %>%
ggplot(aes(x = year, y = cases, group = country_sex, colour = sex)) +
geom_line()
(who5%>%
select(country, year, sex, cases) %>%
filter(year > 1995) %>%
cases = sum(cases))
(who5%>%
select(country, year, sex, cases))
who5 %>%
group_by(country, year, sex) %>%
filter(year > 1995) %>%
summarise(cases = sum(cases)) %>%
unite(country_sex, country, sex, remove = FALSE) %>%
ggplot(aes(x = year, y = cases, group = country_sex, colour = sex)) +
geom_line()
)
(who5%>%
select(country, year, sex, cases))
who5 %>%
group_by(country, year, sex) %>%
filter(year > 1995) %>%
summarise(cases = sum(cases)) %>%
unite(country_sex, country, sex, remove = FALSE) %>%
ggplot(aes(x = year, y = cases, group = country_sex, colour = sex)) +
geom_line()
csv_ej2 = read_csv("testResults.csv")
csv_ej2 = read_csv("testResults.csv")
(csv_ej2)
# los nombres de algunas columnas de la tabla no son realmente variables, sino valores de una variable
(csv_1 = csv_0 %> %
pivot_longer(week1:week5, names_to = "semana"))
# los nombres de algunas columnas de la tabla no son realmente variables, sino valores de una variable
(csv_1 = csv_0 %>%
pivot_longer(week1:week5, names_to = "semana"))
csv_0 = read_csv("testResults.csv")
(csv_0)
# los nombres de algunas columnas de la tabla no son realmente variables, sino valores de una variable
(csv_1 = csv_0 %>%
pivot_longer(week1:week5, names_to = "semana"))
# una observación está repartida en varias filas de la tabla (test_number)
# una columna contiene nombres de variables
(csv_0)
# los nombres de algunas columnas de la tabla no son realmente variables, sino valores de una variable
(csv_1 = csv_0 %>%
pivot_wider(test_number = numero_test))
# los nombres de algunas columnas de la tabla no son realmente variables, sino valores de una variable
(csv_1 = csv_0 %>%
pivot_wider(test_number = numero_test, semana = "semana2"))
# los nombres de algunas columnas de la tabla no son realmente variables, sino valores de una variable
# una observación está repartida en varias filas de la tabla (test_number)
# una columna contiene nombres de variables
(csv_1 = csv_0 %>%
pivot_wider(test_number = numero_test, semana = "semana2"))
# los nombres de algunas columnas de la tabla no son realmente variables, sino valores de una variable
(csv_1 = csv_0 %>%
pivot_longer(week1:week5, names_to = "semana"))
# una observación está repartida en varias filas de la tabla (test_number)
# una columna contiene nombres de variables
# los nombres de algunas columnas de la tabla no son realmente variables, sino valores de una variable
(csv_2 = csv_1 %>%
pivot_wider(names_from = test_number, values_from = value ))
# una observación está repartida en varias filas de la tabla (test_number)
# una columna contiene nombres de variables
# los nombres de algunas columnas de la tabla no son realmente variables, sino valores de una variable
(csv_1 = csv_0 %>%
pivot_longer(week1:week5, names_to = "semana"))
# una columna contiene nombres de variables
(csv_3 = csv_2 %>%
pivot_longer(names_from = semana, values_from = 1 , 2))
# una columna contiene nombres de variables
(csv_3 = csv_2 %>%
pivot_longer(names_from = semana, values_from = 1))
# una columna contiene nombres de variables
csv_0 = read_csv("testResults.csv")
(csv_0)
[x1] = 64/125, 48/125, 12/125, 1/125
x1 = [64/125, 48/125, 12/125, 1/125]
x1 = c(64/125, 48/125, 12/125, 1/125)
x1 = c(64/125, 48/125, 12/125, 1/125)
mean(x1)
x1 = c(64/125, 48/125, 12/125, 1/125)
(media = mean(x1))
(varianza = var(x1))
x1 = c(64/125, 48/125, 12/125, 1/125)
(media = mean(x1))
(varianza = var(x1))
replicate(100000, sample(x1,10))
x1 = c(64/125, 48/125, 12/125, 1/125)
(media = mean(x1))
(varianza = var(x1))
replicate(100000, sample(x1,10, replace = TRUE))
nuevas_muestras = replicate(100000, sample(x1,10, replace = TRUE))
x1_t10 = replicate(100000, sample(x1,10, replace = TRUE))
(x1_t10_media = mean(x1_t10))
x1_t30 = replicate(100000, sample(x1,30, replace = TRUE))
(x1_t30_media = mean(x1_t30))
x1_t10 = replicate(100000, sample(x1,10, replace = TRUE))
(x1_t10_media = mean(x1_t10))
mediasMuestrales_x1 = replicate(100000, {
muestra = sample(x1,10, replace = TRUE)
mean(muestra)
})
mediasMuestrales_x1
x1_t10 = replicate(100000, sample(x1,10, replace = TRUE))
(x1_t10_media = mean(x1_t10))
mediasMuestrales_x1 = replicate(100000, {
muestra = sample(x1,10, replace = TRUE)
mean(muestra)
})
# Representación gráfica de la distribución de las medias muestrales
hist(mediasMuestrales_x1, breaks = 40, main="",
col="peachpuff", probability = TRUE, xlim=range(poblacion))
x1_t10 = replicate(100000, sample(x1,10, replace = TRUE))
(x1_t10_media = mean(x1_t10))
mediasMuestrales_x1 = replicate(100000, {
muestra = sample(x1,10, replace = TRUE)
mean(muestra)
})
# Representación gráfica de la distribución de las medias muestrales
hist(mediasMuestrales_x1, breaks = 40, main="",
col="peachpuff", probability = TRUE, xlim=range(x1))
lines(density(mediasMuestrales_x1), lwd=4, col="red")
lines(density(x1), lwd=4, col="blue")
abline(v = mean(x1), lty=2, lwd=5, col="blue")
knitr::opts_chunk$set(echo = TRUE)
mediasMuestrales_x1 = replicate(100000, {
muestra = sample(x1,10, replace = TRUE)
mean(muestra)
})
x1 = c(64/125, 48/125, 12/125, 1/125)
(media = mean(x1))
(varianza = var(x1))
library(tidyverse)
library(haven)
library(nycflights13)
library(GGally)
library(tidyverse)
library(haven)
library(nycflights13)
library(GGally)
library(tidyverse)
library(haven)
library(nycflights13)
library(GGally)
x1 = c(64/125, 48/125, 12/125, 1/125)
(media = mean(x1))
(varianza = var(x1))
mediasMuestrales_x1 = replicate(100000, {
muestra = sample(x1,10, replace = TRUE)
mean(muestra)
})
# Representación gráfica de la distribución de las medias muestrales
hist(mediasMuestrales_x1, breaks = 40, main="",
col="peachpuff", probability = TRUE, xlim=range(x1))
lines(density(mediasMuestrales_x1), lwd=4, col="red")
lines(density(x1), lwd=4, col="blue")
abline(v = mean(x1), lty=2, lwd=5, col="blue")
mediasMuestrales_x2 = replicate(100000, {
muestra = sample(x1,30, replace = TRUE)
mean(muestra)
})
# Representación gráfica de la distribución de las medias muestrales
hist(mediasMuestrales_x2, breaks = 40, main="",
col="peachpuff", probability = TRUE, xlim=range(x1))
lines(density(mediasMuestrales_x2), lwd=4, col="red")
lines(density(x1), lwd=4, col="blue")
abline(v = mean(x1), lty=2, lwd=5, col="blue")
x1 = c(1/2, 1/4, 1/4)
x2 = c(1/2, 1/4, 1/4)
X1 = c(0:3)
P1 = c(64/125, 48/125, 12/125, 1/125)
(mu_1 = sum(X1*P1))
(sigma2_1= sum((X1 - mu_1)^2*P1))
(varianza2 = (sum(X1*P1))-(mu_1^2))
x1 = c(64/125, 48/125, 12/125, 1/125)
(media = mean(x1))
(varianza = var(x1))
csv_0 = read_csv("testResults.csv")
(csv_0)
# los nombres de algunas columnas de la tabla no son realmente variables, sino valores de una variable
(csv_1 = csv_0 %>%
pivot_longer(week1:week5, names_to = "semana"))
# una observación está repartida en varias filas de la tabla (test_number)
(csv_2 = csv_1 %>%
pivot_wider(names_from = test_number, values_from = value ))
# una columna contiene nombres de variables
csv_0 %>%
separate(col  =  gender_age, into =  c("gender", "age"), sep  =  "_", convert = TRUE)
# los nombres de algunas columnas de la tabla no son realmente variables, sino valores de una variable
(csv_1 = csv_0 %>%
pivot_longer(week1:week5, names_to = "semana"))
# los nombres de algunas columnas de la tabla no son realmente variables, sino valores de una variable
(csv_1 = csv_0 %>%
pivot_longer(week1:week5, names_to = "semana"))
csv_0 = csv_0 %>%
pivot_longer(week1:week5, names_to = "week") %>%
separate(week, into = c("j","week"), convert = TRUE, sep = 4) %>%
select(-j)
csv_0
# los nombres de algunas columnas de la tabla no son realmente variables, sino valores de una variable
colnames(csv_0) = c("name","id", "gender", "age", "ntest", "1", "2", "3", "4", "5")
(csv_1 = csv_0 %>%
pivot_longer(week1:week5, names_to = "semana"))
# los nombres de algunas columnas de la tabla no son realmente variables, sino valores de una variable
colnames(csv_0) = c("name","id", "gender", "age", "ntest", "1", "2", "3", "4", "5")
(csv_1 = csv_0 %>%
pivot_longer(1:5, names_to = "semana"))
# los nombres de algunas columnas de la tabla no son realmente variables, sino valores de una variable
(csv_1 = csv_0 %>%
pivot_longer(week1:week5, names_to = "semana"))
csv_0 = read_csv("testResults.csv")
(csv_0)
# una columna 2 variables en 1
csv_0 %>%
separate(col  =  gender_age, into =  c("gender", "age"), sep  =  "_", convert = TRUE)
# los nombres de algunas columnas de la tabla no son realmente variables, sino valores de una variable
(csv_1 = csv_0 %>%
pivot_longer(week1:week5, names_to = "semana"))
csv_0 = csv_0 %>%
pivot_longer(week1:week5, names_to = "week") %>%
separate(week, into = c("j","week"), convert = TRUE, sep = 4) %>%
select(-j)
csv_0
# los nombres de algunas columnas de la tabla no son realmente variables, sino valores de una variable
colnames(csv_0) = c("name","id", "gender", "age", "ntest", "1", "2", "3", "4", "5")
(csv_0)
(csv_1 = csv_0 %>%
pivot_longer(week1:week5, names_to = "semana"))
# los nombres de algunas columnas de la tabla no son realmente variables, sino valores de una variable
colnames(csv_0) = c("name","id", "gender", "age", "ntest", "1", "2", "3", "4", "5")
(csv_0)
(csv_1 = csv_0 %>%
pivot_longer("1":"2", names_to = "semana"))
# los nombres de algunas columnas de la tabla no son realmente variables, sino valores de una variable
colnames(csv_0) = c("name","id", "gender", "age", "ntest", "1", "2", "3", "4", "5")
(csv_0)
(csv_1 = csv_0 %>%
pivot_longer("1":"2", names_to = "semana"))
csv_0 = read_csv("testResults.csv")
(csv_0)
# una columna 2 variables en 1
csv_0 %>%
separate(col  =  gender_age, into =  c("gender", "age"), sep  =  "_", convert = TRUE)
# los nombres de algunas columnas de la tabla no son realmente variables, sino valores de una variable
colnames(csv_0) = c("name","id", "gender", "age", "ntest", "1", "2", "3", "4", "5")
(csv_0)
(csv_1 = csv_0 %>%
pivot_longer("1":"2", names_to = "semana"))
csv_0 = csv_0 %>%
pivot_longer(week1:week5, names_to = "week") %>%
separate(week, into = c("j","week"), convert = TRUE, sep = 4) %>%
select(-j)
csv_0 = read_csv("testResults.csv")
(csv_0)
# una columna 2 variables en 1
csv_0 %>%
separate(col  =  gender_age, into =  c("gender", "age"), sep  =  "_", convert = TRUE)
csv_0 = read_csv("testResults.csv")
(csv_0)
# una columna 2 variables en 1
csv_1= csv_0 %>%
separate(col  =  gender_age, into =  c("gender", "age"), sep  =  "_", convert = TRUE)
# una columna 2 variables en 1
csv_1= csv_0 %>%
separate(col  =  gender_age, into =  c("gender", "age"), sep  =  "_", convert = TRUE)
csv_1
# los nombres de algunas columnas de la tabla no son realmente variables, sino valores de una variable
colnames(csv_1) = c("name","id", "gender", "age", "ntest", "1", "2", "3", "4", "5")
csv_1
(csv_1 = csv_0 %>%
pivot_longer("1":"5", names_to = "semana"))
csv_0 = read_csv("testResults.csv")
(csv_0)
# una columna 2 variables en 1
csv_1= csv_0 %>%
separate(col  =  gender_age, into =  c("gender", "age"), sep  =  "_", convert = TRUE)
csv_1
# los nombres de algunas columnas de la tabla no son realmente variables, sino valores de una variable
colnames(csv_1) = c("name","id", "gender", "age", "ntest", "1", "2", "3", "4", "5")
csv_1
(csv_2 = csv_1 %>%
pivot_longer("1":"5", names_to = "semana"))
# los nombres de algunas columnas de la tabla no son realmente variables, sino valores de una variable
colnames(csv_1) = c("name","id", "gender", "age", "ntest", "1", "2", "3", "4", "5")
(csv_2 = csv_1 %>%
pivot_longer("1":"5", names_to = "semana"))
# una observación está repartida en varias filas de la tabla (test_number)
(csv_3 = csv_2 %>%
pivot_wider(names_from = test_number, values_from = value ))
# una observación está repartida en varias filas de la tabla (test_number)
(csv_3 = csv_2 %>%
pivot_wider(names_from = ntest, values_from = value ))
# una columna contiene nombres de variables
# una observación está repartida en varias filas de la tabla (test_number)
csv_3 = csv_2 %>%
pivot_wider(names_from = ntest, values_from = value )
colnames(csv_3) = c("name","id", "gender", "age", "semana", "test1", "test2")
csv_3
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(haven)
library(nycflights13)
library(GGally)
x1 = c(0:3)
probabilidad = c(64/125, 48/125, 12/125, 1/125)
(media = sum(x1*probabilidad))
(varianza = sum((x1-media)^2*probabilidad))
mediasMuestrales_x1 = replicate(100000, {
muestra = sample(x1,10, replace = TRUE)
mean(muestra)
})
# Representación gráfica de la distribución de las medias muestrales
hist(mediasMuestrales_x1, breaks = 40, main="",
col="peachpuff", probability = TRUE, xlim=range(x1))
lines(density(mediasMuestrales_x1), lwd=4, col="red")
lines(density(x1), lwd=4, col="blue")
abline(v = mean(x1), lty=2, lwd=5, col="blue")
mediasMuestrales_x2 = replicate(100000, {
muestra = sample(x1,30, replace = TRUE)
mean(muestra)
})
# Representación gráfica de la distribución de las medias muestrales
hist(mediasMuestrales_x2, breaks = 40, main="",
col="peachpuff", probability = TRUE, xlim=range(x1))
lines(density(mediasMuestrales_x2), lwd=4, col="red")
lines(density(x1), lwd=4, col="blue")
abline(v = mean(x1), lty=2, lwd=5, col="blue")
x2 = c(0:2)
probabilidad2 = c(1/2, 1/4, 1/4)
(media = sum(x1*probabilidad))
(varianza = sum((x1-media)^2*probabilidad))
#Valores de la suma
p0 <- x2[1]*x1[1]
p1 <- x2[2]*x1[1] + x2[1]*x1[2]
p2 <- x2[3]*x1[1] + x2[2]*x1[2] + x2[1]*x1[3]
p3 <- x2[1]*x1[4] + x2[2]*x1[3] + x2[3]*x1[2]
p4 <- x2[2]*x1[4] + x2[3]*x1[3]
p5 <- x2[3]*x1[4]
tabla_resultados = matrix(c(p0, p1, p2, p3, p4, p5), nrow = 1)
colnames(tabla_resultados) =  c("Y0", "Y1", "Y2", "Y3", "Y4", "Y5")
tabla_resultados
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(haven)
library(nycflights13)
library(GGally)
x1 = c(0:3)
probabilidad = c(64/125, 48/125, 12/125, 1/125)
(media = sum(x1*probabilidad))
(varianza = sum((x1-media)^2*probabilidad))
mediasMuestrales_x1 = replicate(100000, {
muestra = sample(x1,10, replace = TRUE)
mean(muestra)
})
# Representación gráfica de la distribución de las medias muestrales
hist(mediasMuestrales_x1, breaks = 40, main="",
col="peachpuff", probability = TRUE, xlim=range(x1))
lines(density(mediasMuestrales_x1), lwd=4, col="red")
lines(density(x1), lwd=4, col="blue")
abline(v = mean(x1), lty=2, lwd=5, col="blue")
mediasMuestrales_x2 = replicate(100000, {
muestra = sample(x1,30, replace = TRUE)
mean(muestra)
})
# Representación gráfica de la distribución de las medias muestrales
hist(mediasMuestrales_x2, breaks = 40, main="",
col="peachpuff", probability = TRUE, xlim=range(x1))
lines(density(mediasMuestrales_x2), lwd=4, col="red")
lines(density(x1), lwd=4, col="blue")
abline(v = mean(x1), lty=2, lwd=5, col="blue")
x2 = c(0:2)
probabilidad2 = c(1/2, 1/4, 1/4)
(media = sum(x1*probabilidad))
(varianza = sum((x1-media)^2*probabilidad))
#Valores de la suma
#Prob de la suma de 0
p0 = probabilidad1[1]*probabilidad2[1]
x2 = c(0:2)
probabilidad2 = c(1/2, 1/4, 1/4)
(media = sum(x1*probabilidad))
(varianza = sum((x1-media)^2*probabilidad))
#Valores de la suma
#Prob de la suma de 0
p0 = probabilidad[1]*probabilidad2[1]
#Prob de la suma de 1
p1 = probabilidad[2]*probabilidad2[1] + probabilidad[1]*probabilidad2[2]
#Prob de la suma de 2
p2 = probabilidad[3]*probabilidad2[1] + probabilidad[2]*probabilidad2[2] + probabilidad[1]*probabilidad2[3]
#Prob de la suma de 3
p3 = probabilidad[4]*probabilidad2[1] + probabilidad[2]*probabilidad2[3] + probabilidad[3]*probabilidad2[2]
#Prob de la suma de 4
p4 = probabilidad[4]*x1probabilidad2 + probabilidad[3]*probabilidad2[3]
x2 = c(0:2)
probabilidad2 = c(1/2, 1/4, 1/4)
(media = sum(x1*probabilidad))
(varianza = sum((x1-media)^2*probabilidad))
#Valores de la suma
#Prob de la suma de 0
p0 = probabilidad[1]*probabilidad2[1]
#Prob de la suma de 1
p1 = probabilidad[2]*probabilidad2[1] + probabilidad[1]*probabilidad2[2]
#Prob de la suma de 2
p2 = probabilidad[3]*probabilidad2[1] + probabilidad[2]*probabilidad2[2] + probabilidad[1]*probabilidad2[3]
#Prob de la suma de 3
p3 = probabilidad[4]*probabilidad2[1] + probabilidad[2]*probabilidad2[3] + probabilidad[3]*probabilidad2[2]
#Prob de la suma de 4
p4 = probabilidad[4]*probabilidad2 + probabilidad[3]*probabilidad2[3]
#Prob de la suma de 5
p5 = probabilidad[4]*probabilidad4[3]
x2 = c(0:2)
probabilidad2 = c(1/2, 1/4, 1/4)
(media = sum(x1*probabilidad))
(varianza = sum((x1-media)^2*probabilidad))
#Valores de la suma
#Prob de la suma de 0
p0 = probabilidad[1]*probabilidad2[1]
#Prob de la suma de 1
p1 = probabilidad[2]*probabilidad2[1] + probabilidad[1]*probabilidad2[2]
#Prob de la suma de 2
p2 = probabilidad[3]*probabilidad2[1] + probabilidad[2]*probabilidad2[2] + probabilidad[1]*probabilidad2[3]
#Prob de la suma de 3
p3 = probabilidad[4]*probabilidad2[1] + probabilidad[2]*probabilidad2[3] + probabilidad[3]*probabilidad2[2]
#Prob de la suma de 4
p4 = probabilidad[4]*probabilidad2[2] + probabilidad[3]*probabilidad2[3]
#Prob de la suma de 5
p5 = probabilidad[4]*probabilidad2[3]
tabla_prob = matrix(c(p0, p1, p2, p3, p4, p5), nrow = 1)
colnames(tabla_prob) =  c("Y0", "Y1", "Y2", "Y3", "Y4", "Y5")
tabla_prob
