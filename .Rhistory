chlstrl = read.csv("https://gist.githubusercontent.com/fsansegundo/ee991e53e1a571dd34034c42b5516eae/raw/2206455b5772e90c5a2a24a3f42a84408fd1d1c5/cholesterol.csv")
nrow(chlstrl) # N filas
ncol(chlstrl) # N columnas
nrow(chlstrl) # N filas
ncol(chlstrl) # N columnas
summary.default(chlstrl)
#Observaciones
nrow(chlstrl) # N filas
ncol(chlstrl) # N columnas
#cuales son las variables y de que tipos
summary.default(chlstrl)
#Observaciones
echo('filas')
#Observaciones
nrow(chlstrl) # N filas
ncol(chlstrl) # N columnas
#cuales son las variables y de que tipos
summary.default(chlstrl)
any(is.na(chlstrl)) # datos ausentes
sum(is.na(chlstrl)) # n datos ausentes
apply(is.na(chlstrl),2,which) # localizacion en la tabla
summary(chlstrl$chol) # Resumen numerico
# Grafica de barras
ggplot(chlstrl, aes(x = chol)) +
geom_histogram(aes(y=stat(density)), bins=10, color="white")  +
geom_density(color="red", size=1)
# Grafica
summary(chlstrl$chol) # Resumen numerico
# Grafica de barras
ggplot(chlstrl, aes(x = chol)) +
geom_histogram(aes(y=stat(density)), color="white")  +
geom_density(color="red", size=1)
# Grafica
summary(chlstrl$chol) # Resumen numerico
# Grafica de barras
ggplot(chlstrl, aes(x = chol)) +
geom_histogram(aes(y=stat(density)), color="white")  +
geom_density(color="red", size=1)
# H
plot(chlstrl, pch = 19, col = "black")
summary(chlstrl$chol) # Resumen numerico
# Grafica de barras
ggplot(chlstrl, aes(x = chol)) +
geom_histogram(aes(y=stat(density)), color="white")  +
geom_density(color="red", size=1)
# H
pie(chlstrl, chol,
main = "Gráfico de torta 1",
sub = "Evaluación de la situación económica")
summary(chlstrl$chol) # Resumen numerico
# Grafica de barras
ggplot(chlstrl, aes(x = chol)) +
geom_histogram(aes(y=stat(density)), color="white")  +
geom_density(color="red", size=1)
# H
pie(chlstrl$hol,
main = "Gráfico de torta 1",
sub = "Evaluación de la situación económica")
summary(chlstrl$chol) # Resumen numerico
# Histograma y grafica de densidades
ggplot(chlstrl, aes(x = chol)) +
geom_histogram(aes(y=stat(density)), color="white")  +
geom_density(color="red", size=1)
# Grafica de dispersion
pie(chlstrl$chol,
main = "Gráfico de torta 1",
sub = "Evaluación de la situación económica")
summary(chlstrl$chol) # Resumen numerico
# Histograma y grafica de densidades
ggplot(chlstrl, aes(x = chol)) +
geom_histogram(aes(y=stat(density)), color="white")  +
geom_density(color="red", size=1)
# Grafica de dispersion
plot(chlstrl$chol,
main = "Gráfico de torta 1",
sub = "Evaluación de la situación económica")
summary(chlstrl$chol) # Resumen numerico
# Histograma y grafica de densidades
ggplot(chlstrl, aes(x = chol)) +
geom_histogram(aes(y=stat(density)), color="white")  +
geom_density(color="red", size=1)
# Grafica de dispersion
plot(chlstrl,
main = "Gráfico de torta 1",
sub = "Evaluación de la situación económica")
summary(chlstrl$weight) # Resumen numerico
# Histograma y grafica de densidades
ggplot(chlstrl, aes(x = weight)) +
geom_histogram(aes(y=stat(density)), color="white")  +
geom_density(color="red", size=1)
# Grafica de dispersion
plot(chlstrl$weight,
main = "Gráfico de torta 1",
sub = "Evaluación de la situación económica")
summary(chlstrl$weight) # Resumen numerico
# Histograma y grafica de densidades
ggplot(chlstrl, aes(x = weight)) +
geom_histogram(aes(y=stat(density)), color="white")  +
geom_density(color="red", size=1)
# Grafica de dispersion
plot(chlstrl$weight, pch = 19)
summary(chlstrl$weight) # Resumen numerico
# Histograma y grafica de densidades
ggplot(chlstrl, aes(x = weight)) +
geom_histogram(aes(y=stat(density)), color="white")  +
geom_density(color="red", size=1)
# Grafica de dispersion
plot(chlstrl, pch = 19)
summary(chlstrl$weight) # Resumen numerico
# Histograma y grafica de densidades
ggplot(chlstrl, aes(x = weight)) +
geom_histogram(aes(y=stat(density)), color="white")  +
geom_density(color="red", size=1)
# Grafica de dispersion
plot(chlstrl$waist, pch = 19)
summary(chlstrl$weight) # Resumen numerico
# Histograma y grafica de densidades
ggplot(chlstrl, aes(x = weight)) +
geom_histogram(aes(y=stat(density)), color="white")  +
geom_density(color="red", size=1)
# Grafica de dispersion
plot(chlstrl$age, pch = 19)
summary(chlstrl$weight) # Resumen numerico
# Histograma y grafica de densidades
ggplot(chlstrl, aes(x = weight)) +
geom_histogram(aes(y=stat(density)), color="white")  +
geom_density(color="red", size=1)
# Grafica de dispersion
plot(chlstrl$hip, pch = 19)
summary(chlstrl$weight) # Resumen numerico
# Histograma y grafica de densidades
ggplot(chlstrl, aes(x = weight)) +
geom_histogram(aes(y=stat(density)), color="white")  +
geom_density(color="red", size=1)
# Grafica de dispersion
plot(chlstrl$weight, pch = 19)
chlstrl %>%
count(gender)
chlstrl %>%
count(gender) %>%
mutate(gender, relFreq = prop.table(n), n=NULL)
chlstrl(gender) #frecuencia absoluta
chlstrl(gender) #frecuencia absoluta
chlstrl(gender) #frecuencia absoluta
chlstrl$gender = factor(chlstrl$gender) # Cambiamos la variable a factor
chlstrl(gender) #frecuencia absoluta
chlstrl$gender = factor(chlstrl$gender) # Cambiamos la variable a factor
chlstrl %>%
count(gender) #frecuencia absoluta
table(chlstrl$gender)
table(chlstrl$gender)
prop.table(table(chlstrl$gender))
table(chlstrl$gender) #frecuencia absoluta
prop.table(table(chlstrl$gender))  #frecuencia relativa
#Diagrama de barras
ggplot(chlstrl) +
geom_bar(aes(x=gender,fill=gender))
#cambiamos la tabla chlstrl
# altura
chlstrl$height <- chlstrl$height*0.0254
# peso
chlstrl$weight <- chlstrl$weight*0.454
chlstrl <- chlstrl %>%
mutate(BMI = weight/height^2)
chlstrl <- chlstrl %>%
mutate(BMI = weight/height^2)
(chlstrl$BMI)
#cambiamos la tabla chlstrl
# altura
chlstrl$height <- chlstrl$height*0.0254
# peso
chlstrl$weight <- chlstrl$weight*0.454
(chlstrl$height , chlstrl$weight)
#cambiamos la tabla chlstrl
# altura
chlstrl$height <- chlstrl$height*0.0254
# peso
chlstrl$weight <- chlstrl$weight*0.454
(chlstrl$height, chlstrl$weight)
#cambiamos la tabla chlstrl
# altura
chlstrl$height <- chlstrl$height*0.0254
# peso
chlstrl$weight <- chlstrl$weight*0.454
(chlstrl%>%
select(height, weight))
chlstrl %>%
mutate(ageGroup = cut(age, breaks = c(10, 40, 70, 100)))
chlstrl %>%
mutate(ageGroup = cut(age, breaks = c(10, 40, 70, 100)))
(chlstrl$ageGroup)
chlstrl %>%
mutate(ageGroup = cut(age, breaks = c(10, 40, 70, 100)))
chlstrl <- chlstrl %>%
mutate(BMI = weight/height^2)%>%
head(5)
(chlstrl$BMI)
#cambiamos la tabla chlstrl
# altura
chlstrl$height <- chlstrl$height*0.0254
# peso
chlstrl$weight <- chlstrl$weight*0.454
(chlstrl%>%
select(height, weight)%>%
head(5))
chlstrl %>%
mutate(ageGroup = cut(age, breaks = c(10, 40, 70, 100)))%>%
head(5)
chlstrl %>%
mutate(ageGroup = cut(age, breaks = c(10, 40, 70, 100)))
library(dplyr)
(chlstrl %>%
group_by(ageGroup) %>%
filter(gender == "female") %>%
summarise(BMIaverage = mean(BMI, na.rm = TRUE), cholAverage = mean(chol, na.rm = TRUE)))
library(dplyr)
(chlstrl %>%
group_by(ageGroup) %>%
filter(gender == "female") %>%
summarise(chol.mean = mean(chol, na.rm = T),
BMI.mean = mean(BMI, na.rm = T)))
chlstrl %>%
mutate(ageGroup = cut(age, breaks = c(10, 40, 70, 100)))
chlstrl %>%
mutate(ageGroup = cut(age, breaks = c(10, 40, 70, 100)))
library(dplyr)
(chlstrl %>%
group_by(ageGroup) %>%
filter(gender == "female") %>%
summarise(chol.mean = mean(chol, na.rm = T),
BMI.mean = mean(BMI, na.rm = T)))
chlstrl = chlstrl %>%
mutate(ageGroup = cut(age, breaks = c(10, 40, 70, 100)))
library(dplyr)
(chlstrl %>%
group_by(ageGroup) %>%
filter(gender == "female") %>%
summarise(chol.mean = mean(chol, na.rm = T),
BMI.mean = mean(BMI, na.rm = T)))
library(dplyr)
(chlstrl %>%
group_by(ageGroup) %>%
filter(gender == "female") %>%
summarise(media_colesterol = mean(chol, na.rm = T),
media_BIM = mean(BMI, na.rm = T)))
#cambiamos la tabla chlstrl
chlstrl <- chlstrl %>%
mutate(BMI = weight/height^2)%>%
head(5)
(chlstrl$BMI)
cambiosSigno = function(numeros){ #se introducen numeros en la funcion
cambios = 0
for( i in 1:length(numeros)-1){
if(numeros[i]*numeros[i-1] < 0){
cambios = cambios + 1
}
}
return(cambios)
}
cambiosSigno = function(numeros){ #se introducen numeros en la funcion
cambios = 0
for( i in 1:length(numeros)-1){
if(sign(numeros[i]) != sign(numeros[i-1])){ #if signo negativo contar cambio
cambios = cambios + 1
}
}
return(cambios)
}
cambiosSigno = function(numeros){ #se introducen numeros en la funcion
cambios = 0
for( i in 1:length(numeros)-1){
if(sign(numeros[i]) != sign(numeros[i-1])){ #if signo negativo contar cambio
cambios = cambios + 1
}
}
return(cambios)
}
cambiosSigno(c(-12, -19, 9, -13, -14, -17, 8, -19, -14))
cambiosSigno = function(numeros){ #se introducen numeros en la funcion
cambios = 0
for( i in 2:length(numeros)){
if(sign(numeros[i]) != sign(numeros[i-1])){ #if signo negativo contar cambio
cambios = cambios + 1
}
}
return(cambios)
}
cambiosSigno(c(-12, -19, 9, -13, -14, -17, 8, -19, -14))
cambiosSigno = function(numeros){ #se introducen numeros en la funcion
cambios = 0
for( i in 2:length(numeros)){
if(sign(numeros[i]) != sign(numeros[i-1])){ #if signo negativo contar cambio
cambios = cambios + 1
}
}
return(cambios)
}
cambiosSigno(vector(-12, -19, 9, -13, -14, -17, 8, -19, -14))
cambiosSigno = function(numeros){ #se introducen numeros en la funcion
cambios = 0
for( i in 2:length(numeros)){
if(sign(numeros[i]) != sign(numeros[i-1])){ #if signo negativo contar cambio
cambios = cambios + 1
}
}
return(cambios)
}
cambiosSigno(c(-12, -19, 9, -13, -14, -17, 8, -19, -14))
cambiosSignoPos = function(numeros){ #se introducen numeros en la funcion
posiciones = c()
for( i in 2:length(numeros)){
if(sign(numeros[i]) != sign(numeros[i-1])){ #if signo negativo
posiciones = c(posiciones, i) #aniadir posicion al vector posiciones
}
}
return(posiciones)
}
cambiosSignoPos(vector(-12, -19, 9, -13, -14, -17, 8, -19, -14))
cambiosSignoPos = function(numeros){ #se introducen numeros en la funcion
posiciones = c()
for( i in 2:length(numeros)){
if(sign(numeros[i]) != sign(numeros[i-1])){ #if signo negativo
posiciones = c(posiciones, i) #aniadir posicion al vector posiciones
}
}
return(posiciones)
}
cambiosSignoPos(c(-12, -19, 9, -13, -14, -17, 8, -19, -14))
cambiosSignoPos(sample(-100:100,20))
cambiosSignoPos = function(numeros){ #se introducen numeros en la funcion
posiciones = c()
for( i in 2:length(numeros)){
if(sign(numeros[i]) != sign(numeros[i-1])){ #if signo negativo
posiciones = c(posiciones, i) #aniadir posicion al vector posiciones
}
}
return(posiciones)
}
cambiosSignoPos(c(-12, -19, 9, -13, -14, -17, 8, -19, -14))
cambiosSignoPos(sample(-100:100,20))
cambiosSignoPos = function(numeros){ #se introducen numeros en la funcion
posiciones = c()
for( i in 2:length(numeros)){
if(sign(numeros[i]) != sign(numeros[i-1])){ #if signo negativo
posiciones = c(posiciones, i) #aniadir posicion al vector posiciones
}
}
return(posiciones)
}
cambiosSignoPos(c(-12, -19, 9, -13, -14, -17, 8, -19, -14))
cambiosSignoPos(sample(-100:100,20))
cambiosSignoPos = function(numeros){ #se introducen numeros en la funcion
posiciones = c()
for( i in 2:length(numeros)){
if(sign(numeros[i]) != sign(numeros[i-1])){ #if signo negativo
posiciones = c(posiciones, i) #aniadir posicion al vector posiciones
}
}
return(posiciones)
}
cambiosSignoPos(c(-12, -19, 9, -13, -14, -17, 8, -19, -14))
cambiosSignoPos(sample(-100:100,20))
cambiosSignoPos = function(numeros){ #se introducen numeros en la funcion
posiciones = c()
for( i in 2:length(numeros)){
if(sign(numeros[i]) != sign(numeros[i-1])){ #if signo negativo
posiciones = c(posiciones, i) #aniadir posicion al vector posiciones
}
}
return(posiciones)
}
cambiosSignoPos(c(-12, -19, 9, -13, -14, -17, 8, -19, -14))
cambiosSignoPos(sample(-100:100,20))
cambiosSignoPos = function(numeros){ #se introducen numeros en la funcion
posiciones = c()
for( i in 2:length(numeros)){
if(sign(numeros[i]) != sign(numeros[i-1])){ #if signo negativo
posiciones = c(posiciones, i) #aniadir posicion al vector posiciones
}
}
return(posiciones)
}
cambiosSignoPos(c(-12, -19, 9, -13, -14, -17, 8, -19, -14))
cambiosSignoPos(sample(-100:100,20))
g1 <- ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth(se = FALSE)
g2 <- ggplot(data = mpg, mapping = aes(x = displ, y = hwy, group = drv)) +
geom_point() +
geom_smooth(se = FALSE)
g3 <- ggplot(data = mpg, mapping = aes(x = displ, y = hwy, colour = drv)) +
geom_point() +
geom_smooth(se = FALSE)
g4 <- ggplot() +
geom_point(data = mpg, mapping = aes(x = displ, y = hwy, colour = drv)) +
geom_smooth(data = mpg, mapping = aes(x = displ, y = hwy), se = FALSE)
g5 <- ggplot() +
geom_point(data = mpg, mapping = aes(x = displ, y = hwy, colour = drv)) +
geom_smooth(data = mpg, mapping = aes(x = displ, y = hwy, linetype = drv), se = FALSE)
g6 <- ggplot(data = mpg, aes(x = displ, y = hwy)) +
geom_point(size = 3, colour = "white") +
geom_point(aes(colour = drv), size = 1)
g1 <- ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth(se = FALSE)
g2 <- ggplot(data = mpg, mapping = aes(x = displ, y = hwy, group = drv)) +
geom_point() +
geom_smooth(se = FALSE)
g3 <- ggplot(data = mpg, mapping = aes(x = displ, y = hwy, colour = drv)) +
geom_point() +
geom_smooth(se = FALSE)
g4 <- ggplot() +
geom_point(data = mpg, mapping = aes(x = displ, y = hwy, colour = drv)) +
geom_smooth(data = mpg, mapping = aes(x = displ, y = hwy), se = FALSE)
g5 <- ggplot() +
geom_point(data = mpg, mapping = aes(x = displ, y = hwy, colour = drv)) +
geom_smooth(data = mpg, mapping = aes(x = displ, y = hwy, linetype = drv), se = FALSE)
g6 <- ggplot(data = mpg, aes(x = displ, y = hwy)) +
geom_point(size = 3, colour = "white") +
geom_point(aes(colour = drv), size = 1)
(g1)
g1 <- ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth(se = FALSE)
g2 <- ggplot(data = mpg, mapping = aes(x = displ, y = hwy, group = drv)) +
geom_point() +
geom_smooth(se = FALSE)
g3 <- ggplot(data = mpg, mapping = aes(x = displ, y = hwy, colour = drv)) +
geom_point() +
geom_smooth(se = FALSE)
g4 <- ggplot() +
geom_point(data = mpg, mapping = aes(x = displ, y = hwy, colour = drv)) +
geom_smooth(data = mpg, mapping = aes(x = displ, y = hwy), se = FALSE)
g5 <- ggplot() +
geom_point(data = mpg, mapping = aes(x = displ, y = hwy, colour = drv)) +
geom_smooth(data = mpg, mapping = aes(x = displ, y = hwy, linetype = drv), se = FALSE)
g6 <- ggplot(data = mpg, aes(x = displ, y = hwy)) +
geom_point(size = 3, colour = "white") +
geom_point(aes(colour = drv), size = 1)
(g1)(g2)
g1 <- ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth(se = FALSE)
g2 <- ggplot(data = mpg, mapping = aes(x = displ, y = hwy, group = drv)) +
geom_point() +
geom_smooth(se = FALSE)
g3 <- ggplot(data = mpg, mapping = aes(x = displ, y = hwy, colour = drv)) +
geom_point() +
geom_smooth(se = FALSE)
g4 <- ggplot() +
geom_point(data = mpg, mapping = aes(x = displ, y = hwy, colour = drv)) +
geom_smooth(data = mpg, mapping = aes(x = displ, y = hwy), se = FALSE)
g5 <- ggplot() +
geom_point(data = mpg, mapping = aes(x = displ, y = hwy, colour = drv)) +
geom_smooth(data = mpg, mapping = aes(x = displ, y = hwy, linetype = drv), se = FALSE)
g6 <- ggplot(data = mpg, aes(x = displ, y = hwy)) +
geom_point(size = 3, colour = "white") +
geom_point(aes(colour = drv), size = 1)
(g1)
(g2)
g1 <- ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth(se = FALSE)
g2 <- ggplot(data = mpg, mapping = aes(x = displ, y = hwy, group = drv)) +
geom_point() +
geom_smooth(se = FALSE)
g3 <- ggplot(data = mpg, mapping = aes(x = displ, y = hwy, colour = drv)) +
geom_point() +
geom_smooth(se = FALSE)
g4 <- ggplot() +
geom_point(data = mpg, mapping = aes(x = displ, y = hwy, colour = drv)) +
geom_smooth(data = mpg, mapping = aes(x = displ, y = hwy), se = FALSE)
g5 <- ggplot() +
geom_point(data = mpg, mapping = aes(x = displ, y = hwy, colour = drv)) +
geom_smooth(data = mpg, mapping = aes(x = displ, y = hwy, linetype = drv), se = FALSE)
g6 <- ggplot(data = mpg, aes(x = displ, y = hwy)) +
geom_point(size = 3, colour = "white") +
geom_point(aes(colour = drv), size = 1)
(g1)
(g2)
(g3)
(g4)
(g5)
(g6)
g1 = ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth(se = FALSE)
g2 = ggplot(data = mpg, mapping = aes(x = displ, y = hwy, group = drv)) +
geom_point() +
geom_smooth(se = FALSE)
g3 = ggplot(data = mpg, mapping = aes(x = displ, y = hwy, colour = drv)) +
geom_point() +
geom_smooth(se = FALSE)
g4 = ggplot() +
geom_point(data = mpg, mapping = aes(x = displ, y = hwy, colour = drv)) +
geom_smooth(data = mpg, mapping = aes(x = displ, y = hwy), se = FALSE)
g5 = ggplot() +
geom_point(data = mpg, mapping = aes(x = displ, y = hwy, colour = drv)) +
geom_smooth(data = mpg, mapping = aes(x = displ, y = hwy, linetype = drv), se = FALSE)
g6 = ggplot(data = mpg, aes(x = displ, y = hwy)) +
geom_point(colour = "white", size = 2) +
geom_point(aes(colour = drv), size = 2)
(g1)
(g2)
(g3)
(g4)
(g5)
(g6)
install.packages("nycflights13")
library(nycflights13)
filter(flights, arr_delay >= 120)
filter(flights, arr_delay >= 120)
